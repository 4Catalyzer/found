"use strict";(self.webpackChunkfound_docs=self.webpackChunkfound_docs||[]).push([[2570],{2374:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"configuration/navigation","title":"Navigation","description":"Found provides a high-level abstractions such as a link component for controlling browser navigation. Under the hood, it delegates to Farce for implementation, and as such can also be controlled directly via the Redux store.","source":"@site/docs/configuration/navigation.md","sourceDirName":"configuration","slug":"/configuration/navigation","permalink":"/found/docs/configuration/navigation","draft":false,"unlisted":false,"editUrl":"https://github.com/4Catalyzer/found/edit/master/www/docs/configuration/navigation.md","tags":[],"version":"current","frontMatter":{"sidebar_postion":3},"sidebar":"tutorialSidebar","previous":{"title":"Router configuration","permalink":"/found/docs/configuration/router-config"},"next":{"title":"Advanced","permalink":"/found/docs/category/advanced"}}');var o=t(4848),a=t(8453);const r={sidebar_postion:3},s="Navigation",c={},l=[{value:"Links",id:"links",level:4},{value:"Programmatic navigation",id:"programmatic-navigation",level:4},{value:"Blocking navigation",id:"blocking-navigation",level:4}];function d(e){const n={a:"a",code:"code",h1:"h1",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"navigation",children:"Navigation"})}),"\n",(0,o.jsxs)(n.p,{children:["Found provides a high-level abstractions such as a link component for controlling browser navigation. Under the hood, it delegates to ",(0,o.jsx)(n.a,{href:"https://github.com/4Catalyzer/farce",children:"Farce"})," for implementation, and as such can also be controlled directly via the Redux store."]}),"\n",(0,o.jsx)(n.h4,{id:"links",children:"Links"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"<Link>"})," component renders a link with optional active state indication."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'const link1 = (\n  <Link to="/widgets/foo" activeClassName="active">\n    Foo widget\n  </Link>\n);\n\nconst link2 = (\n  <Link\n    as={CustomAnchor}\n    to={{\n      pathname: "/widgets/bar",\n      query: { the: query },\n    }}\n    activePropName="active"\n  >\n    Bar widget with query\n  </Link>\n);\n\nconst link3 = (\n  <Link\n    to={{\n      pathname: "/widgets/bar",\n      query: { the: query },\n    }}\n  >\n    {({ href, active, onClick }) => (\n      <CustomButton href={href} active={active} onClick={onClick} />\n    )}\n  </Link>\n);\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"<Link>"})," accepts the following props:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"to"}),": a ",(0,o.jsx)(n.a,{href:"https://github.com/4Catalyzer/farce#locations-and-location-descriptors",children:"location descriptor"})," for the link's destination"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"exact"}),": if specified, the link will only render as active if the current location exactly matches the ",(0,o.jsx)(n.code,{children:"to"})," location descriptor; by default, the link also will render as active on subpaths of the ",(0,o.jsx)(n.code,{children:"to"})," location descriptor"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"activeClassName"}),": if specified, a CSS class to append to the component's CSS classes when the link is active"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"activeStyle"}),": if specified, a style object to append merge with the component's style object when the link is active"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"activePropName"}),": if specified, a prop to inject with a boolean value with the link's active state"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"as"}),": if specified, the custom element type to use for the link; by default, the link will render an ",(0,o.jsx)(n.code,{children:"<a>"})," element"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["A link will navigate per its ",(0,o.jsx)(n.code,{children:"to"})," location descriptor when clicked. You can prevent this navigation by providing an ",(0,o.jsx)(n.code,{children:"onClick"})," handler that calls ",(0,o.jsx)(n.code,{children:"event.preventDefault()"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"<Link>"})," accepts a function for ",(0,o.jsx)(n.code,{children:"children"}),". If ",(0,o.jsx)(n.code,{children:"children"})," is a function, then ",(0,o.jsx)(n.code,{children:"<Link>"})," will render the return value of that function, and will ignore ",(0,o.jsx)(n.code,{children:"activeClassName"}),", ",(0,o.jsx)(n.code,{children:"activeStyle"}),", ",(0,o.jsx)(n.code,{children:"activePropName"}),", and ",(0,o.jsx)(n.code,{children:"as"})," above. The function will be called with an object with the following properties:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"href"}),": the URL for the link"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"active"}),": whether the link is active"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"onClick"}),": the click event handler for the link element"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Otherwise, ",(0,o.jsx)(n.code,{children:"<Link>"})," forwards additional props to the child element."]}),"\n",(0,o.jsx)(n.h4,{id:"programmatic-navigation",children:"Programmatic navigation"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"withRouter"})," HOC wraps an existing component class or function and injects ",(0,o.jsx)(n.code,{children:"match"})," and ",(0,o.jsx)(n.code,{children:"router"})," props, as on route components above. You can use this HOC to create components that navigate programmatically in event handlers."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'class MyButton extends React.Component {\n  onClick = () => {\n    this.props.router.replace("/widgets");\n  };\n\n  render() {\n    return (\n      <button onClick={this.onClick}>\n        Current widget: {this.props.match.params.widgetId}\n      </button>\n    );\n  }\n}\n\nexport default withRouter(MyButton);\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"useRouter"})," Hook provides the same capabilities."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'function MyButton() {\n  const { match, router } = useRouter();\n\n  const onClick = useCallback(() => {\n    router.replace("/widgets");\n  }, [router]);\n\n  return (\n    <button onClick={onClick}>\n      Current widget: {match.params.widgetId}\n    </button>\n  );\n}\n'})}),"\n",(0,o.jsx)(n.h4,{id:"blocking-navigation",children:"Blocking navigation"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"router.addNavigationListener"})," method adds a ",(0,o.jsx)(n.a,{href:"https://github.com/4Catalyzer/farce#navigation-listeners",children:"navigation listener"})," that can block navigation. This method accepts a navigation listener function and an optional options object. It returns a function that removes the navigation listener."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'function MyForm(props) {\n  const [dirty, setDirty] = useState(false);\n  const { router } = useRouter();\n\n  useEffect(\n    () =>\n      dirty\n        ? router.addNavigationListener(\n            () =>\n              "You have unsaved input. Are you sure you want to leave this page?"\n          )\n        : undefined,\n    [dirty]\n  );\n\n  /* ... */\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The navigation listener function receives the location to which the user is attempting to navigate as its argument. Return ",(0,o.jsx)(n.code,{children:"true"})," or ",(0,o.jsx)(n.code,{children:"false"})," from this function to allow or block navigation respectively. Return a string to display a default confirmation dialog to the user. Return a nully value to use the next navigation listener if present, or else allow navigation. Return a promise to defer allowing or blocking navigation until the promise resolves; you can use this to display a custom confirmation dialog."]}),"\n",(0,o.jsxs)(n.p,{children:["If you want to run your navigation listeners when the user attempts to leave the page, set ",(0,o.jsx)(n.code,{children:"beforeUnload"})," in the options object. If this option is enabled, your navigation listeners will be called with a ",(0,o.jsx)(n.code,{children:"null"})," location when the user attempts to leave the page. In this scenario, the navigation listener must return a non-promise value."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"router.addNavigationListener(\n  (location) => {\n    if (!location) {\n      return false;\n    }\n\n    return asyncConfirm(location);\n  },\n  { beforeUnload: true }\n);\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://github.com/4Catalyzer/found/tree/master/examples/navigation-listener",children:"navigation listener usage example"})," demonstrates the use of navigation listeners in more detail, including the use of the ",(0,o.jsx)(n.code,{children:"beforeUnload"})," option."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(6540);const o={},a=i.createContext(o);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);