"use strict";(self.webpackChunkfound_docs=self.webpackChunkfound_docs||[]).push([[965],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(u,".").concat(m)]||d[m]||l[m]||a;return n?r.createElement(f,c(c({ref:t},p),{},{components:n})):r.createElement(f,c({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6759:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),c=["components"],i={sidebar_position:1},u="Accessing route matches in components",s={unversionedId:"advanced/component-route-access",id:"advanced/component-route-access",title:"Accessing route matches in components",description:"To access details of the current route match, Found injects { router, match } props",source:"@site/docs/advanced/component-route-access.md",sourceDirName:"advanced",slug:"/advanced/component-route-access",permalink:"/found/advanced/component-route-access",editUrl:"https://github.com/4Catalyzer/found/edit/master/docs/advanced/component-route-access.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Navigation",permalink:"/found/configuration/navigation"},next:{title:"Error handling",permalink:"/found/advanced/error-handling"}},p=[],l={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"accessing-route-matches-in-components"},"Accessing route matches in components"),(0,a.kt)("p",null,"To access details of the current route match, Found injects ",(0,a.kt)("inlineCode",{parentName:"p"},"{ router, match }")," props\ninto every route ",(0,a.kt)("inlineCode",{parentName:"p"},"Component")," that matches for a URL. Sometimes it's not convenient to pass these\ndown deeper into your component tree. To avoid this, Found provides a set of hooks for accessing\nthe route match state."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useRouter")," can be used to access both the current match and Router instance:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function MyButton() {\n  const { match, router } = useRouter();\n\n  const onClick = useCallback(() => {\n    router.replace('/widgets');\n  }, [router]);\n\n  return (\n    <button onClick={onClick}>Current widget: {match.params.widgetId}</button>\n  );\n}\n")),(0,a.kt)("p",null,"Route ",(0,a.kt)("inlineCode",{parentName:"p"},"match")," contains the current route params, location, as well as matched route configs.\nThere are also ",(0,a.kt)("inlineCode",{parentName:"p"},"useMatch"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"useParams")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"useLocation")," for retrieving only what you specifically\nneed."))}d.isMDXComponent=!0}}]);