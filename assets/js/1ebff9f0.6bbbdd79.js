"use strict";(self.webpackChunkfound_docs=self.webpackChunkfound_docs||[]).push([[965],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},l=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(n),m=o,f=l["".concat(i,".").concat(m)]||l[m]||d[m]||a;return n?r.createElement(f,c(c({ref:t},p),{},{components:n})):r.createElement(f,c({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=l;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var u=2;u<a;u++)c[u]=n[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}l.displayName="MDXCreateElement"},6759:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},c="Accessing route matches in components",s={unversionedId:"advanced/component-route-access",id:"advanced/component-route-access",title:"Accessing route matches in components",description:"To access details of the current route match, Found injects { router, match } props",source:"@site/docs/advanced/component-route-access.md",sourceDirName:"advanced",slug:"/advanced/component-route-access",permalink:"/found/docs/advanced/component-route-access",draft:!1,editUrl:"https://github.com/4Catalyzer/found/edit/master/www/docs/advanced/component-route-access.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Advanced",permalink:"/found/docs/category/advanced"},next:{title:"Error handling",permalink:"/found/docs/advanced/error-handling"}},i={},u=[],p={toc:u};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"accessing-route-matches-in-components"},"Accessing route matches in components"),(0,o.kt)("p",null,"To access details of the current route match, Found injects ",(0,o.kt)("inlineCode",{parentName:"p"},"{ router, match }")," props\ninto every route ",(0,o.kt)("inlineCode",{parentName:"p"},"Component")," that matches for a URL. Sometimes it's not convenient to pass these\ndown deeper into your component tree. To avoid this, Found provides a set of hooks for accessing\nthe route match state."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useRouter")," can be used to access both the current match and Router instance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'function MyButton() {\n  const { match, router } = useRouter();\n\n  const onClick = useCallback(() => {\n    router.replace("/widgets");\n  }, [router]);\n\n  return (\n    <button onClick={onClick}>\n      Current widget: {match.params.widgetId}\n    </button>\n  );\n}\n')),(0,o.kt)("p",null,"Route ",(0,o.kt)("inlineCode",{parentName:"p"},"match")," contains the current route params, location, as well as matched route configs.\nThere are also ",(0,o.kt)("inlineCode",{parentName:"p"},"useMatch"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useParams")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"useLocation")," for retrieving only what you specifically\nneed."))}d.isMDXComponent=!0}}]);