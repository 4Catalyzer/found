"use strict";(self.webpackChunkfound_docs=self.webpackChunkfound_docs||[]).push([[417],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return t?a.createElement(h,r(r({ref:n},p),{},{components:t})):a.createElement(h,r({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var c=2;c<o;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5228:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=t(7462),i=(t(7294),t(3905));const o={sidebar_postion:3},r="Navigation",l={unversionedId:"configuration/navigation",id:"configuration/navigation",title:"Navigation",description:"Found provides a high-level abstractions such as a link component for controlling browser navigation. Under the hood, it delegates to Farce for implementation, and as such can also be controlled directly via the Redux store.",source:"@site/docs/configuration/navigation.md",sourceDirName:"configuration",slug:"/configuration/navigation",permalink:"/found/docs/configuration/navigation",draft:!1,editUrl:"https://github.com/4Catalyzer/found/edit/master/www/docs/configuration/navigation.md",tags:[],version:"current",frontMatter:{sidebar_postion:3},sidebar:"tutorialSidebar",previous:{title:"Router configuration",permalink:"/found/docs/configuration/router-config"},next:{title:"Advanced",permalink:"/found/docs/category/advanced"}},s={},c=[{value:"Links",id:"links",level:4},{value:"Programmatic navigation",id:"programmatic-navigation",level:4},{value:"Blocking navigation",id:"blocking-navigation",level:4}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"navigation"},"Navigation"),(0,i.kt)("p",null,"Found provides a high-level abstractions such as a link component for controlling browser navigation. Under the hood, it delegates to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/4Catalyzer/farce"},"Farce")," for implementation, and as such can also be controlled directly via the Redux store."),(0,i.kt)("h4",{id:"links"},"Links"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"<Link>")," component renders a link with optional active state indication."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const link1 = (\n  <Link to="/widgets/foo" activeClassName="active">\n    Foo widget\n  </Link>\n);\n\nconst link2 = (\n  <Link\n    as={CustomAnchor}\n    to={{\n      pathname: "/widgets/bar",\n      query: { the: query },\n    }}\n    activePropName="active"\n  >\n    Bar widget with query\n  </Link>\n);\n\nconst link3 = (\n  <Link\n    to={{\n      pathname: "/widgets/bar",\n      query: { the: query },\n    }}\n  >\n    {({ href, active, onClick }) => (\n      <CustomButton href={href} active={active} onClick={onClick} />\n    )}\n  </Link>\n);\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"<Link>")," accepts the following props:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"to"),": a ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/4Catalyzer/farce#locations-and-location-descriptors"},"location descriptor")," for the link's destination"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"exact"),": if specified, the link will only render as active if the current location exactly matches the ",(0,i.kt)("inlineCode",{parentName:"li"},"to")," location descriptor; by default, the link also will render as active on subpaths of the ",(0,i.kt)("inlineCode",{parentName:"li"},"to")," location descriptor"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"activeClassName"),": if specified, a CSS class to append to the component's CSS classes when the link is active"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"activeStyle"),": if specified, a style object to append merge with the component's style object when the link is active"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"activePropName"),": if specified, a prop to inject with a boolean value with the link's active state"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"as"),": if specified, the custom element type to use for the link; by default, the link will render an ",(0,i.kt)("inlineCode",{parentName:"li"},"<a>")," element")),(0,i.kt)("p",null,"A link will navigate per its ",(0,i.kt)("inlineCode",{parentName:"p"},"to")," location descriptor when clicked. You can prevent this navigation by providing an ",(0,i.kt)("inlineCode",{parentName:"p"},"onClick")," handler that calls ",(0,i.kt)("inlineCode",{parentName:"p"},"event.preventDefault()"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"<Link>")," accepts a function for ",(0,i.kt)("inlineCode",{parentName:"p"},"children"),". If ",(0,i.kt)("inlineCode",{parentName:"p"},"children")," is a function, then ",(0,i.kt)("inlineCode",{parentName:"p"},"<Link>")," will render the return value of that function, and will ignore ",(0,i.kt)("inlineCode",{parentName:"p"},"activeClassName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"activeStyle"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"activePropName"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"as")," above. The function will be called with an object with the following properties:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"href"),": the URL for the link"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"active"),": whether the link is active"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onClick"),": the click event handler for the link element")),(0,i.kt)("p",null,"Otherwise, ",(0,i.kt)("inlineCode",{parentName:"p"},"<Link>")," forwards additional props to the child element."),(0,i.kt)("h4",{id:"programmatic-navigation"},"Programmatic navigation"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"withRouter")," HOC wraps an existing component class or function and injects ",(0,i.kt)("inlineCode",{parentName:"p"},"match")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"router")," props, as on route components above. You can use this HOC to create components that navigate programmatically in event handlers."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const propTypes = {\n  match: matchShape.isRequired,\n  router: routerShape.isRequired,\n};\n\nclass MyButton extends React.Component {\n  onClick = () => {\n    this.props.router.replace("/widgets");\n  };\n\n  render() {\n    return (\n      <button onClick={this.onClick}>\n        Current widget: {this.props.match.params.widgetId}\n      </button>\n    );\n  }\n}\n\nMyButton.propTypes = propTypes;\n\nexport default withRouter(MyButton);\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"useRouter")," Hook provides the same capabilities."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'function MyButton() {\n  const { match, router } = useRouter();\n\n  const onClick = useCallback(() => {\n    router.replace("/widgets");\n  }, [router]);\n\n  return (\n    <button onClick={onClick}>\n      Current widget: {match.params.widgetId}\n    </button>\n  );\n}\n')),(0,i.kt)("h4",{id:"blocking-navigation"},"Blocking navigation"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"router.addNavigationListener")," method adds a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/4Catalyzer/farce#navigation-listeners"},"navigation listener")," that can block navigation. This method accepts a navigation listener function and an optional options object. It returns a function that removes the navigation listener."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'function MyForm(props) {\n  const [dirty, setDirty] = useState(false);\n  const { router } = useRouter();\n\n  useEffect(\n    () =>\n      dirty\n        ? router.addNavigationListener(\n            () =>\n              "You have unsaved input. Are you sure you want to leave this page?"\n          )\n        : undefined,\n    [dirty]\n  );\n\n  /* ... */\n}\n')),(0,i.kt)("p",null,"The navigation listener function receives the location to which the user is attempting to navigate as its argument. Return ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," from this function to allow or block navigation respectively. Return a string to display a default confirmation dialog to the user. Return a nully value to use the next navigation listener if present, or else allow navigation. Return a promise to defer allowing or blocking navigation until the promise resolves; you can use this to display a custom confirmation dialog."),(0,i.kt)("p",null,"If you want to run your navigation listeners when the user attempts to leave the page, set ",(0,i.kt)("inlineCode",{parentName:"p"},"beforeUnload")," in the options object. If this option is enabled, your navigation listeners will be called with a ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," location when the user attempts to leave the page. In this scenario, the navigation listener must return a non-promise value."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"router.addNavigationListener(\n  (location) => {\n    if (!location) {\n      return false;\n    }\n\n    return asyncConfirm(location);\n  },\n  { beforeUnload: true }\n);\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/4Catalyzer/found/tree/master/examples/navigation-listener"},"navigation listener usage example")," demonstrates the use of navigation listeners in more detail, including the use of the ",(0,i.kt)("inlineCode",{parentName:"p"},"beforeUnload")," option."))}u.isMDXComponent=!0}}]);